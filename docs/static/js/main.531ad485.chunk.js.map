{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","SignIn","props","onEmailChange","e","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","onChange","type","name","href","Component","Register","onNameChange","res","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","entries","particleParams","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calcFaceCoords","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","showFaceBox","event","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.531ad485.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.87466cd4.png\";","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p\n          onClick={() => onRouteChange('signout')}\n          className='f3 link dim black underline pa3 pointer'\n        >\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p\n          onClick={() => onRouteChange('signin')}\n          className='f3 link dim black underline pa3 pointer'\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange('register')}\n          className='f3 link dim black underline pa3 pointer'\n        >\n          Sign Up\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    };\n  }\n  onEmailChange = e => {\n    this.setState({ signInEmail: e.target.value });\n  };\n  onPasswordChange = e => {\n    this.setState({ signInPassword: e.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    fetch('https://obscure-river-22492.herokuapp.com/signin', {\n      method: 'post',\n      // test\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      });\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n\n    return (\n      <article className='br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\n        <main className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f2 fw6 ph0 mh0'>Sign In</legend>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\n                  Email\n                </label>\n                <input\n                  onChange={this.onEmailChange}\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='email'\n                  name='email-address'\n                  id='email-address'\n                />\n              </div>\n              <div className='mv3'>\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\n                  Password\n                </label>\n                <input\n                  onChange={this.onPasswordChange}\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='password'\n                  name='password'\n                  id='password'\n                />\n              </div>\n            </fieldset>\n            <div className=''>\n              <input\n                onClick={this.onSubmitSignIn}\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n                type='submit'\n                value='Sign in'\n              />\n            </div>\n            <div className='ba b--black-20 lh-copy mt3'>\n              <p\n                onClick={() => onRouteChange('register')}\n                href='#0'\n                className='f6 link dim black db pointer'\n              >\n                Sign Up\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from 'react';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n  onNameChange = e => {\n    this.setState({ name: e.target.value });\n  };\n\n  onEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  onPasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  onSubmitSignIn = e => {\n    fetch('https://obscure-river-22492.herokuapp.com/register', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <article className='br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\n        <main className='pa4 black-80'>\n          <div className='measure'>\n            <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n              <legend className='f2 fw6 ph0 mh0'>Sign Up</legend>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6' htmlFor='name'>\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='test'\n                  name='name'\n                  id='name'\n                />\n              </div>\n              <div className='mt3'>\n                <label className='db fw6 lh-copy f6' htmlFor='email-address'>\n                  Email\n                </label>\n                <input\n                  onChange={this.onEmailChange}\n                  className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='email'\n                  name='email-address'\n                  id='email-address'\n                />\n              </div>\n              <div className='mv3'>\n                <label className='db fw6 lh-copy f6' htmlFor='password'>\n                  Password\n                </label>\n                <input\n                  onChange={this.onPasswordChange}\n                  className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                  type='password'\n                  name='password'\n                  id='password'\n                />\n              </div>\n            </fieldset>\n            <div className=''>\n              <input\n                onClick={this.onSubmitSignIn}\n                className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n                type='submit'\n                value='Register'\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.png';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='ma4 mt0'>\n      <Tilt\n        className='Tilt br2 shadow-2'\n        options={{ max: 55 }}\n        style={{ height: 150, width: 150 }}\n      >\n        <div className='Tilt-inner pa3'>\n          <img src={brain} alt='logo' />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className='f3'>\n        {\"Give me the picture of a human, I'll highlight the face for you!\"}\n      </p>\n      <div className='center'>\n        <div className='form center pa4 br3 shadow-5'>\n          <input\n            type='text'\n            className='f4 pa2 w-70 center'\n            onChange={onInputChange}\n          />\n          <button\n            className='w-30 grow f4 link ph3 pv2 dib white bg-dark-blue'\n            onClick={onButtonSubmit}\n          >\n            Show Face\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute m2'>\n        <img\n          id='input__image'\n          alt=''\n          src={imageUrl}\n          width='500px'\n          height='auto'\n        />\n        <div\n          className='bounding-box'\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <div className='white f3'>\n        {`${name} , your current entry count is...`}\n      </div>\n      <div className='white f1'>{entries}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst particleParams = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800 //150\n      }\n    }\n  }\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  };\n\n  calcFaceCoords = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    /* clarifaiFace will get from the Clarifai API:\n    'bounding_box': {\n             'top_row': 0.3,\n             'left_col': 0.2,\n             'bottom_row': 0.7,\n             'right_col': 0.8\n           } \n      These are percentages of the image dimensions. */\n    const image = document.getElementById('input__image');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width, height);\n\n    // So we need to calculate the coords of the face box(es)\n    // and draw it as a rectangular border\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  };\n\n  // Populate the box{} of the state\n  showFaceBox = box => {\n    this.setState({ box });\n  };\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch('https://obscure-river-22492.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://obscure-river-22492.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(res => res.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            })\n            .catch(console.log);\n        }\n        this.showFaceBox(this.calcFaceCoords(response));\n      })\n      .catch(err => console.log(err));\n  };\n\n  onRouteChange = route => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n\n    this.setState({ route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className='App'>\n        <Particles className='particles' params={particleParams} />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === 'home' ? (\n          <>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </>\n        ) : route === 'signin' ? (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}